/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../common";

export interface II4iRouterInterface extends utils.Interface {
  functions: {
    "getDy(address[],uint256[3][],uint256)": FunctionFragment;
    "getDyWithoutFee(address[],uint256[3][],uint256)": FunctionFragment;
    "swapWithPath(address[],uint256[3][],uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "getDy" | "getDyWithoutFee" | "swapWithPath"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getDy",
    values: [
      string[],
      [BigNumberish, BigNumberish, BigNumberish][],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getDyWithoutFee",
    values: [
      string[],
      [BigNumberish, BigNumberish, BigNumberish][],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapWithPath",
    values: [
      string[],
      [BigNumberish, BigNumberish, BigNumberish][],
      BigNumberish,
      BigNumberish
    ]
  ): string;

  decodeFunctionResult(functionFragment: "getDy", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getDyWithoutFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapWithPath",
    data: BytesLike
  ): Result;

  events: {};
}

export interface II4iRouter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: II4iRouterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getDy(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getDyWithoutFee(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    swapWithPath(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      _minAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  getDy(
    _path: string[],
    _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getDyWithoutFee(
    _path: string[],
    _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  swapWithPath(
    _path: string[],
    _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
    _amount: BigNumberish,
    _minAmount: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getDy(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getDyWithoutFee(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    swapWithPath(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      _minAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;
  };

  filters: {};

  estimateGas: {
    getDy(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDyWithoutFee(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    swapWithPath(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      _minAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getDy(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDyWithoutFee(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    swapWithPath(
      _path: string[],
      _swapParams: [BigNumberish, BigNumberish, BigNumberish][],
      _amount: BigNumberish,
      _minAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
