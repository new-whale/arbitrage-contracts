/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RoundrobinHelper,
  RoundrobinHelperInterface,
} from "../../../../contracts/Uni2/Roundrobin.sol/RoundrobinHelper";

const _abi = [
  {
    inputs: [],
    name: "CPMMRouter",
    outputs: [
      {
        internalType: "contract IRoundrobinRouter",
        name: "",
        type: "IRoundrobinRouter",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WKLAY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61011c61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100715760003560e01c8063c45a01551161005a578063c45a0155146100d6578063ddca3f43146100f1578063f887ea40146100bb57600080fd5b8063249502d7146100765780639d56b91a146100bb575b600080fd5b61009173f01f433268c277535743231c95c8e46783746d3081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61009173a0182322bbf8209b6b5983eda3f2336215c5561d81565b6100917301d43af9c2a1e9c5d542c2299fe5826a357eb3fe81565b6100fa610bb881565b60405163ffffffff90911681526020016100b256fea164736f6c6343000807000a";

type RoundrobinHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoundrobinHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoundrobinHelper__factory extends ContractFactory {
  constructor(...args: RoundrobinHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoundrobinHelper> {
    return super.deploy(overrides || {}) as Promise<RoundrobinHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RoundrobinHelper {
    return super.attach(address) as RoundrobinHelper;
  }
  override connect(signer: Signer): RoundrobinHelper__factory {
    return super.connect(signer) as RoundrobinHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoundrobinHelperInterface {
    return new utils.Interface(_abi) as RoundrobinHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoundrobinHelper {
    return new Contract(address, _abi, signerOrProvider) as RoundrobinHelper;
  }
}
