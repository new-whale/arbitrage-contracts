/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KSPHelper,
  KSPHelperInterface,
} from "../../../../contracts/Uni2/Klayswap.sol/KSPHelper";

const _abi = [
  {
    inputs: [],
    name: "CPMMRouter",
    outputs: [
      {
        internalType: "contract IKlayswap",
        name: "",
        type: "IKlayswap",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WKLAY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e3610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610606a5760003560e01c8063c45a0155116055578063c45a01551460a0578063ddca3f431460ba578063f887ea401460a057600080fd5b8063249502d714606f5780639d56b91a1460a0575b600080fd5b6076600081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b607673c6a2ad8cc6e4a7e08fc37cc5954be07d499e765481565b60c2610bb881565b60405163ffffffff9091168152602001609756fea164736f6c6343000807000a";

type KSPHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KSPHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KSPHelper__factory extends ContractFactory {
  constructor(...args: KSPHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KSPHelper> {
    return super.deploy(overrides || {}) as Promise<KSPHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KSPHelper {
    return super.attach(address) as KSPHelper;
  }
  override connect(signer: Signer): KSPHelper__factory {
    return super.connect(signer) as KSPHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KSPHelperInterface {
    return new utils.Interface(_abi) as KSPHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KSPHelper {
    return new Contract(address, _abi, signerOrProvider) as KSPHelper;
  }
}
