/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IEisenMultihopRouter,
  IEisenMultihopRouterInterface,
} from "../../../contracts/interface/IEisenMultihopRouter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "output",
        type: "address",
      },
    ],
    name: "Exchange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "output",
        type: "address",
      },
    ],
    name: "LogFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
    ],
    name: "Profit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dex",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "dexType",
        type: "uint8",
      },
    ],
    name: "addDex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dexes",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "dexTypes",
        type: "uint8[]",
      },
    ],
    name: "addDexes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "part",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "parts",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "dexType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "dexId",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IMultiAMM.Swap[]",
        name: "swapSequences",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "calAndExecuteSingleSwapExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "part",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "parts",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "dexType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "dexId",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IMultiAMM.Swap[][]",
        name: "swapSequences",
        type: "tuple[][]",
      },
    ],
    name: "calMultihopBatchSwapExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "part",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "parts",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "dexType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "dexId",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IMultiAMM.Swap[]",
        name: "swapSequences",
        type: "tuple[]",
      },
    ],
    name: "calSingleSwapExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "part",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "parts",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "dexType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "dexId",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IMultiAMM.Swap[][][]",
        name: "swapSequences",
        type: "tuple[][][]",
      },
    ],
    name: "calbatchSwapExactInBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "part",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "parts",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "dexType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "dexId",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IMultiAMM.Swap[]",
        name: "swapSequences",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "executeSingleSwapExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "i",
        type: "uint8",
      },
    ],
    name: "getDexes",
    outputs: [
      {
        internalType: "address[]",
        name: "dexes",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDexesAll",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "dexes",
            type: "address[]",
          },
          {
            internalType: "uint8",
            name: "dexType",
            type: "uint8",
          },
        ],
        internalType: "struct IEisenMultihopRouter.DexTypes[]",
        name: "dexes",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dex",
        type: "address",
      },
    ],
    name: "removeDex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dexes",
        type: "address[]",
      },
    ],
    name: "removeDexes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IEisenMultihopRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IEisenMultihopRouterInterface {
    return new utils.Interface(_abi) as IEisenMultihopRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEisenMultihopRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IEisenMultihopRouter;
  }
}
