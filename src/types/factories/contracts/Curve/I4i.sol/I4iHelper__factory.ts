/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  I4iHelper,
  I4iHelperInterface,
} from "../../../../contracts/Curve/I4i.sol/I4iHelper";

const _abi = [
  {
    inputs: [],
    name: "CurveRouter",
    outputs: [
      {
        internalType: "contract II4iRouter",
        name: "",
        type: "II4iRouter",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WKLAY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60da610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060515760003560e01c8063249502d71460565780634eca1fe5146099578063afcff50f1460b3578063f887ea40146099575b600080fd5b607073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6070738f7b94b20c74b03f17c7680f54ad8ee418282cf481565b607073bd21dd5bcfe28475d26154935894d4f515a7b1c08156fea164736f6c6343000807000a";

type I4iHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: I4iHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class I4iHelper__factory extends ContractFactory {
  constructor(...args: I4iHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<I4iHelper> {
    return super.deploy(overrides || {}) as Promise<I4iHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): I4iHelper {
    return super.attach(address) as I4iHelper;
  }
  override connect(signer: Signer): I4iHelper__factory {
    return super.connect(signer) as I4iHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): I4iHelperInterface {
    return new utils.Interface(_abi) as I4iHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): I4iHelper {
    return new Contract(address, _abi, signerOrProvider) as I4iHelper;
  }
}
