/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  II4iRouter,
  II4iRouterInterface,
} from "../../../../contracts/Curve/I4i.sol/II4iRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
      {
        internalType: "uint256[3][]",
        name: "_swapParams",
        type: "uint256[3][]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getDy",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
      {
        internalType: "uint256[3][]",
        name: "_swapParams",
        type: "uint256[3][]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getDyWithoutFee",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
      {
        internalType: "uint256[3][]",
        name: "_swapParams",
        type: "uint256[3][]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minAmount",
        type: "uint256",
      },
    ],
    name: "swapWithPath",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_outputs",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

export class II4iRouter__factory {
  static readonly abi = _abi;
  static createInterface(): II4iRouterInterface {
    return new utils.Interface(_abi) as II4iRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): II4iRouter {
    return new Contract(address, _abi, signerOrProvider) as II4iRouter;
  }
}
