/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  InitializableOwnable,
  InitializableOwnableInterface,
} from "../../../contracts/libraries/InitializableOwnable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferPrepared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "_NEW_OWNER_",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_OWNER_",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "initOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610365806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634e71e0c8116100505780634e71e0c8146100b05780638456db15146100b8578063f2fde38b146100cb57600080fd5b80630d0092971461006c57806316048bc414610081575b600080fd5b61007f61007a366004610328565b6100de565b005b600054610094906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007f61019b565b600154610094906001600160a01b031681565b61007f6100d9366004610328565b610266565b600154600160a01b900460ff161561013d5760405162461bcd60e51b815260206004820152600f60248201527f495a4e5f494e495449414c495a4544000000000000000000000000000000000060448201526064015b60405180910390fd5b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055600080546001600160a01b0390921673ffffffffffffffffffffffffffffffffffffffff19909216919091179055565b6001546001600160a01b031633146101f55760405162461bcd60e51b815260206004820152600d60248201527f494e56414c49445f434c41494d000000000000000000000000000000000000006044820152606401610134565b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146102c05760405162461bcd60e51b815260206004820152600960248201527f4e4f545f4f574e455200000000000000000000000000000000000000000000006044820152606401610134565b600080546040516001600160a01b03808516939216917fdcf55418cee3220104fef63f979ff3c4097ad240c0c43dcb33ce837748983e6291a36001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60006020828403121561033a57600080fd5b81356001600160a01b038116811461035157600080fd5b939250505056fea164736f6c6343000807000a";

type InitializableOwnableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitializableOwnableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitializableOwnable__factory extends ContractFactory {
  constructor(...args: InitializableOwnableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InitializableOwnable> {
    return super.deploy(overrides || {}) as Promise<InitializableOwnable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InitializableOwnable {
    return super.attach(address) as InitializableOwnable;
  }
  override connect(signer: Signer): InitializableOwnable__factory {
    return super.connect(signer) as InitializableOwnable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitializableOwnableInterface {
    return new utils.Interface(_abi) as InitializableOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitializableOwnable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InitializableOwnable;
  }
}
